//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tech_Forum.DomaintechServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DomaintechServiceReference.IDomainTechService")]
    public interface IDomainTechService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDomainTechService/DoWork", ReplyAction="http://tempuri.org/IDomainTechService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDomainTechService/DoWork", ReplyAction="http://tempuri.org/IDomainTechService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDomainTechService/GetDomainList", ReplyAction="http://tempuri.org/IDomainTechService/GetDomainListResponse")]
        DomainTech.Domain_Table[] GetDomainList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDomainTechService/GetDomainList", ReplyAction="http://tempuri.org/IDomainTechService/GetDomainListResponse")]
        System.Threading.Tasks.Task<DomainTech.Domain_Table[]> GetDomainListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDomainTechService/GetTechforDomain", ReplyAction="http://tempuri.org/IDomainTechService/GetTechforDomainResponse")]
        DomainTech.Technology_Table[] GetTechforDomain(string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDomainTechService/GetTechforDomain", ReplyAction="http://tempuri.org/IDomainTechService/GetTechforDomainResponse")]
        System.Threading.Tasks.Task<DomainTech.Technology_Table[]> GetTechforDomainAsync(string domain);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDomainTechServiceChannel : Tech_Forum.DomaintechServiceReference.IDomainTechService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DomainTechServiceClient : System.ServiceModel.ClientBase<Tech_Forum.DomaintechServiceReference.IDomainTechService>, Tech_Forum.DomaintechServiceReference.IDomainTechService {
        
        public DomainTechServiceClient() {
        }
        
        public DomainTechServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DomainTechServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainTechServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainTechServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public DomainTech.Domain_Table[] GetDomainList() {
            return base.Channel.GetDomainList();
        }
        
        public System.Threading.Tasks.Task<DomainTech.Domain_Table[]> GetDomainListAsync() {
            return base.Channel.GetDomainListAsync();
        }
        
        public DomainTech.Technology_Table[] GetTechforDomain(string domain) {
            return base.Channel.GetTechforDomain(domain);
        }
        
        public System.Threading.Tasks.Task<DomainTech.Technology_Table[]> GetTechforDomainAsync(string domain) {
            return base.Channel.GetTechforDomainAsync(domain);
        }
    }
}
